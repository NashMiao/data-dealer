

spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp


spring.jpa.show-sql = false
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect =org.hibernate.dialect.MySQL5Dialect
spring.datasource.max-idle=10
spring.datasource.max-wait=10000
spring.datasource.min-idle=5
spring.datasource.initial-size=5
spring.datasource.validation-query=SELECT 1
spring.datasource.test-on-borrow=false
spring.datasource.test-while-idle=true
spring.datasource.time-between-eviction-runs-millis=18800

spring.jpa.database = oracle
spring.datasource.url = jdbc:mysql:thin:@localhost:3306
spring.datasource.username = root
spring.datasource.password =

#email server
application.email.url=http://sendcloud.sohu.com/webapi/mail.send_template.json
application.email.api_user=91xunhui_test_LlaB9M
application.email.api_key=NR6bglgI7YlvEzuK
application.email.from=company@service.91xunhui.com
application.email.fromname=\u5BFB\u6C47 | \u6C47\u7387\u7BA1\u5BB6\u56E2\u961F


application.encoding=UTF-8

mybatis.config-location=classpath:mybatis-config.xml
mybatis.mapper-locations=classpath:/mybatis/mapper/*Mapper.xml
mybatis.type-aliases-package=com.onchain.projects.domain

spring.profiles.active=dev
logging.config=file:config/logback.xml

#server.port=10330
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driverClassName=com.mysql.jdbc.Driver
#spring.jpa.database=MYSQL
#spring.datasource.url=jdbc:mysql://139.219.136.188:3306/ontid?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&rewriteBatchedStatements=true&autoReconnect=true&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=ontidpasswd


# Show or not log for each sql query
#spring.jpa.show-sql = false

#spring.datasource.max-idle=10
#指定连接池等待连接返回的最大等待时间，毫秒单位.
#spring.datasource.max-wait=10000
#指定必须保持连接的最小值 最小空闲
#spring.datasource.min-idle=5
//定义初始连接数
#spring.datasource.initial-size=5
#spring.datasource.validation-query=SELECT 1
# 即在获取Connection对象时检测其可用性，会影响性能
#spring.datasource.test-on-borrow=true
# 有些数据库连接的时候有超时限制（mysql连接在8小时后断开），或者由于网络中断等原因，连接池的连接会出现失效的情况，这时候设置一个testWhileIdle参数为true，可以保证连接池内部定时检测连接的可用性，不可用的连接会被抛弃或者重建，最大情况的保证从连接池中得到的Connection对象是可用的
#spring.datasource.test-while-idle=true
# 在空闲时 每个1小时 访问一下数据库，避免连接池中的连接因超时而失效
#spring.datasource.time-between-eviction-runs-millis=3600000

#如果当前连接池中某个连接在空闲了timeBetweenEvictionRunsMillis时间后任然没有使用，则被物理性的关闭掉。
#空闲连接回收的时间间隔，与test-while-idle一起使用，设置5分钟
#spring.datasource.time-between-eviction-runs-millis=300000
# 配置一个连接在池中最小生存的时间，单位是毫秒,连接池空闲连接的有效时间,5分钟

#连接池空闲连接的有效时间 ，设置30分钟
#spring.datasource.min-evictable-idle-time-millis=1800000

#spring.datasource.setMaxLifetime=250000
#spring.datasource.validationTimeout = 150000
#在连接归还到连接池时是否测试该连接
#spring.datasource.test-on-return=false

#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#指定连接池中最大的活跃连接数.
#spring.datasource.max-active= 10
#spring.datasource.jdbc-interceptors=ConnectionState;SlowQueryReport(threshold=1000)


